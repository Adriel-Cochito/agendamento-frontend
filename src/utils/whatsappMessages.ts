// src/utils/whatsappMessages.ts
import { StatusAgendamento } from '@/types/agendamento';
import { dateUtils } from './dateUtils';

export interface WhatsAppMessageData {
  clienteName: string;
  serviceName: string;
  profissionalName: string;
  date: string;
  time: string;
  empresaNome?: string;
}

export interface WhatsAppMessageConfig {
  title: string;
  buttonText: string;
  buttonColor: string;
  generateMessage: (data: WhatsAppMessageData) => string;
}

export const whatsappMessages: Record<StatusAgendamento, WhatsAppMessageConfig> = {
  AGENDADO: {
    title: 'Enviar Lembrete de Agendamento',
    buttonText: 'Enviar Lembrete',
    buttonColor: 'bg-blue-600 hover:bg-blue-700',
    generateMessage: (data) => `üìÖ Lembrete de Agendamento

Ol√° ${data.clienteName}!

Este √© um lembrete do seu agendamento:

üìç Servi√ßo: ${data.serviceName}
üë®‚Äç‚öïÔ∏è Profissional: ${data.profissionalName}
üìÖ Data: ${data.date}
‚è∞ Hor√°rio: ${data.time}

üîî N√£o se esque√ßa! Chegue com 10 minutos de anteced√™ncia.

üìû Se precisar remarcar ou cancelar, entre em contato conosco.

Aguardamos voc√™! üòä`
  },

  CONFIRMADO: {
    title: 'Enviar Confirma√ß√£o de Agendamento',
    buttonText: 'Enviar Confirma√ß√£o',
    buttonColor: 'bg-green-600 hover:bg-green-700',
    generateMessage: (data) => `‚úÖ Confirma√ß√£o de Agendamento

üéØ Ol√° ${data.clienteName}!

Seu agendamento foi CONFIRMADO com sucesso:

üìÖ Data: ${data.date}
‚è∞ Hor√°rio: ${data.time}
üíº Servi√ßo: ${data.serviceName}
üë®‚Äç‚öïÔ∏è Profissional: ${data.profissionalName}

üìç Por favor, chegue com 10 minutos de anteced√™ncia para melhor organiza√ß√£o.

üìû Caso precise remarcar ou cancelar, entre em contato conosco pelo WhatsApp ou telefone.

‚ú® Agradecemos sua confian√ßa e estaremos √† disposi√ß√£o!

---
Esta √© uma mensagem autom√°tica de confirma√ß√£o.`
  },

  REALIZADO: {
    title: 'Enviar Agradecimento',
    buttonText: 'Enviar Agradecimento',
    buttonColor: 'bg-gray-600 hover:bg-gray-700',
    generateMessage: (data) => `üéâ Obrigado pela sua visita!

Ol√° ${data.clienteName}!

Esperamos que tenha ficado satisfeito(a) com o nosso atendimento:

‚úÖ Servi√ßo: ${data.serviceName}
üë®‚Äç‚öïÔ∏è Profissional: ${data.profissionalName}
üìÖ Data: ${data.date}

‚≠ê Sua opini√£o √© muito importante para n√≥s!

üìû Para novos agendamentos ou d√∫vidas, estamos sempre √† disposi√ß√£o.

üíô Agradecemos pela confian√ßa e esperamos v√™-lo(a) novamente em breve!`
  },

  CANCELADO: {
    title: 'Enviar sobre Cancelamento',
    buttonText: 'Falar sobre Cancelamento',
    buttonColor: 'bg-red-600 hover:bg-red-700',
    generateMessage: (data) => `‚ö†Ô∏è Sobre o Cancelamento

Ol√° ${data.clienteName}!

Confirmamos o cancelamento do seu agendamento:

üìÖ Era para: ${data.date} √†s ${data.time}
üíº Servi√ßo: ${data.serviceName}
üë®‚Äç‚öïÔ∏è Profissional: ${data.profissionalName}

üîÑ Quando quiser remarcar, estamos aqui para ajudar!

üìû Entre em contato conosco para:
‚Ä¢ Reagendar para outra data
‚Ä¢ Esclarecer d√∫vidas
‚Ä¢ Novos agendamentos

üíô Esperamos v√™-lo(a) em breve!`
  }
};

// Fun√ß√£o utilit√°ria para formatar telefone para WhatsApp
export const formatPhoneForWhatsApp = (phone: string): string => {
  const numbersOnly = phone.replace(/\D/g, '');
  if (!numbersOnly.startsWith('55')) {
    return `55${numbersOnly}`;
  }
  return numbersOnly;
};

// Fun√ß√£o utilit√°ria para criar URL do WhatsApp
export const createWhatsAppUrl = (phone: string, message: string): string => {
  const formattedPhone = formatPhoneForWhatsApp(phone);
  const encodedMessage = encodeURIComponent(message);
  return `https://wa.me/${formattedPhone}?text=${encodedMessage}`;
};

// Fun√ß√£o utilit√°ria para copiar mensagem
export const copyMessageToClipboard = async (message: string): Promise<boolean> => {
  try {
    await navigator.clipboard.writeText(message);
    return true;
  } catch (err) {
    console.error('Erro ao copiar mensagem:', err);
    return false;
  }
};

// Fun√ß√£o para obter configura√ß√£o da mensagem baseada no status
export const getWhatsAppMessageConfig = (status: StatusAgendamento): WhatsAppMessageConfig => {
  return whatsappMessages[status];
};

// Fun√ß√£o para gerar dados formatados da mensagem
export const formatMessageData = (
  agendamento: any, 
  servico: any, 
  profissional: any,
  dataHora: string
): WhatsAppMessageData => {
  // Usar as fun√ß√µes do dateUtils que j√° tratam o fuso hor√°rio corretamente
  const formattedDateTime = dateUtils.formatLocal(dataHora);
  const [formattedDate, formattedTime] = formattedDateTime.split(' ');

  return {
    clienteName: agendamento?.nomeCliente || 'Cliente',
    serviceName: servico?.titulo || 'Servi√ßo',
    profissionalName: profissional?.nome || 'Profissional',
    date: formattedDate,
    time: formattedTime,
  };
};